||| unique existence. We use subsets and intersections rather than sigmas and
||| pis since the proof of uniqueness is computationally trivial and does not
||| belong in the witness.

Operator unique : (0;1).
[unique(A; B)] =def= [
  (x:A) * {_ : B[x] | {y:A} B[y] => =(x;y;A)}
].

||| unique inhabitation
Operator isContr : (0).
[isContr(A)] =def= [{x:A | {y:A} =(x; y; A)}].

||| There is just one function void â‡’ A for any A.
Theorem abort-unique : [{A:U{i}} unique(void -> A; _. unit)] {
  unfold <unique>; auto;
  intro [lam(x. x)]; auto;
  ext; auto
}.

||| using isContr: the realizer is just the unique function (the uniqueness
||| proof is just in the derivation)
Theorem void-fun-contr : [{A : U{i}} isContr(void -> A)] {
  unfold <isContr>; auto;
  intro [lam(x. x)]; auto;
  ext; auto
}.
