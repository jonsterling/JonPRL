Theorem ceq-refl-thru-approx : [ {x:base} ceq(x; x) ]
{
  intro; focus 1 #{auto};
  capprox; areflexivity
}.

Operator bottom : ().
[bottom()] =def= [ fix(lam(x.x)) ].

Operator has-value : (0).
[has-value(t)] =def= [ approx(<>;cbv(t;_.<>)) ].

Operator not : (0).
[not(P)] =def= [ P -> void ].

Theorem bottom-diverges : [ not(has-value(bottom)) ] {
  unfold <not has-value bottom>;
  auto;
  bot-div #1
}.
