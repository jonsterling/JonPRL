Theorem ceq-refl-thru-approx : [ ⋂(base; x.ceq(x; x)) ]
{
  intro @i;[id, auto];[];
  capprox;[areflexivity,areflexivity]
}.

Operator bottom : ().
[bottom()] =def= [ fix(λ(x.x)) ].

Operator has-value : (0).
[has-value(t)] =def= [ approx(<>;cbv(t;_.<>)) ].

Operator not : (0).
[not(P)] =def= [ Π(P;_.void) ].

Theorem bottom-diverges : [ not(has-value(bottom)) ] {
  unfold <not has-value bottom>;
  intro @i;
    [ bot-div #1
    , auto
    ]
}.
