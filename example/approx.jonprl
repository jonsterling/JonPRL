Theorem ceq-refl-thru-approx : [ {x:base} ceq(x; x) ]
{
  intro; focus 1 #{auto};
  capprox; areflexivity
}.

Operator bottom : ().
[bottom()] =def= [ fix(lam(x.x)) ].

Infix 7 "≼" =def= approx.

Operator has-value : (0).
Postfix 11 "⇓" =def= has-value.
[t ⇓] =def= [ <> ≼ cbv(t;_.<>) ].

Operator not : (0).
Prefix 10 "¬" =def= not.
[¬ P] =def= [ P -> void ].

Theorem bottom-diverges : [ ¬ bottom ⇓ ] {
  unfold <not has-value bottom>;
  auto; bot-div #1
}.
