Operator Y : (0).
[Y(f)] =def= [lam(x.f (x x)) lam(x.f (x x))].

Infix 7 "~" := ceq.

Theorem test : [lam(x.x) ~ lam(x.x)] {
  auto
}.

Theorem test2 : [spread(lam(x.x); x.y.x) ~ spread(lam(x.x); x.y.y)] {
  auto
}.

Theorem test3 : [lam(x.x) ~ lam(x.spread(<x,x>; x._.x))] {
  auto; csymmetry; step; auto
}.

Theorem y-is-fix-point : [{A:U{i}} {f : A -> A} Y(f) ~ f Y(f)] {
  auto; unfold <Y>; step; auto
}.

Theorem transitive : [
  {a:base} {b:base} {c:base}
    =(a;b;base)
    => =(b;c;base)
    => =(a;b;base)
] {
  auto;
  elim #4;
  elim #5;
  chyp-subst → #6 [h. h ~ c];
  chyp-subst ← #7 [h. b ~ h];
  auto
}.

Operator complex : (1; 1; 2; 0; 1).

Theorem complex-ceq : [
  complex(x.x; x.unit; x.y.y; <>; x.<>)
    ~ complex(x.spread(<x,x>; x._.x); x.unit; x.y.y; <>; x.<>)
] {
  auto; reduce; auto
}.
