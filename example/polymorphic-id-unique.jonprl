Theorem polymorphic-id-unique : [
  (F : {A : U{i}} A -> A) =(F; id; {A : U{i}} A -> A)
] {
  unfold <id>; auto;
  elim <F> [A] <FA, eqFA>; auto;

  ext; auto; reduce;

  aux {
    hyp-subst <- <eqFA> [h. =(h; h; _)];
    auto
  };

  elim <F> [{y : A | =(y; x; A)}] <F', eqF'>; auto;
  hyp-subst <- <eqF'> [H. =(H x; x; A)];
  auto;

  [ elim <F'> [x] <F'x, eqF'x>; auto;
    hyp-subst <- <eqF'x> [J. =(J; x; A)]; auto;
    elim <F'x>; auto

  , elim <H> [x] <Hx, eqHx>; auto;
    hyp-subst <- <eqHx> [J. =(J; J; A)]; auto
  ]

}.

||| Local Variables:
||| flycheck-highlighting-mode: nil
||| End:
